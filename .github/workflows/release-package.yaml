name: Publish Package to Github Packages & npmjs
on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run lint
      - run: npm run test:unit
  publish-npmjs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20.5.0
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm run build
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  publish-snippet:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      BROWSERSLIST_IGNORE_OLD_DATA: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
          node-version: 20
      - run: npm ci
      - run: npm run build:web-snippet
      - name: Change to build directory & log contents
        run: cd ./build/web-snippets && pwd && ls
      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::581316994213:role/GithubDeployRole
          aws-region: us-east-1
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CDN_DISTRIBUTION }}
          PATHS: '/*'
          AWS_REGION: 'us-east-1'
      - name: Copy files to the production website with the AWS CLI
        run: |
          cd ./build/web-snippets && aws s3 sync --delete . s3://ezbot-prod-javascript-tracker/web-snippets
